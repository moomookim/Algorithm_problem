#include <iostream>

using namespace std;

bool visit[21];
int N, M;
bool bad[21][21];
int cnt;
void DFS(int idx);

int main()
{
	int t = 0, T;
	cin >> T;
	while (t < T)
	{
		cin >> N >> M;

		for (int i = 0; i <= N; i++)
		{
			for (int k = 0; k <= N; k++)
			{
				bad[i][k] = bad[k][i] = false;
			}
			visit[i] = false;
		}
		for (int i = 0; i < M; i++)
		{
			int a, b;
			cin >> a >> b;
			bad[a][b] = true;
			bad[b][a] = true;
		}
		cnt = 0;
		DFS(1);
		cout << "#" << t + 1 << " " << cnt << endl;
		t++;;
	}
    return 0;
}

void DFS(int idx)
{
	if (idx > N)
	{
		cnt++;
		return;
	}

	for (int i = 1; i <= idx; i++)
	{
		if (visit[i]==true&&bad[i][idx] == true) break;
		if (i == idx)
		{
			visit[idx] = true;
			DFS(idx + 1);
		}
		
	}
	
	visit[idx] = false;
	DFS(idx + 1);
}
